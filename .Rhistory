filter(!is.na(employment_area))
ggplot(filtered_data, aes(x = reorder(employment_area, employment_area, function(x) -length(x)))) +
geom_bar(fill = "steelblue") +
labs(
title = "Enrollment in Cyber Security Course by Employment Area",
x = "Employment Area",
y = "Number of Enrollments"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Adjust font size and angle
plot.title = element_text(hjust = 0.5)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05)))
library(ProjectTemplate)
load.project()
combined_data <- read.csv("~/Desktop/courseWorkCS8631/data/finalData/combined_cleaned_cyber_security.csv")
filtered_data <- combined_data %>%
filter(!is.na(employment_area))
ggplot(filtered_data, aes(x = reorder(employment_area, employment_area, function(x) -length(x)))) +
geom_bar(fill = "steelblue") +
labs(
title = "Enrollment in Cyber Security Course by Employment Area",
x = "Employment Area",
y = "Number of Enrollments"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Adjust font size and angle
plot.title = element_text(hjust = 0.5)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05)))
install.packages("knitr")
library(knitr)
summary_table <- combined_data %>%
group_by(employment_area) %>%
summarise(
Count = n()  # Count number of learners per employment area
) %>%
arrange(desc(Count)) %>%  # Sort by count in descending order
bind_rows(
tibble(
employment_area = "Total",
Count = nrow(combined_data)  # Total number of learners
),
tibble(
employment_area = "Missing",
Count = sum(is.na(combined_data$employment_area))  # Number of missing values
)
)
kable(summary_table, caption = "Summary of Learners per Employment Area")
table1 <- combined_data %>%
count(employment_area) %>%
arrange(desc(n)) %>%
head(5)
table2 <- combined_data %>%
count(employment_area) %>%
arrange(desc(n)) %>%
slice(6:10)
# Display tables side by side
cat("<div style='display: flex;'>")
# Table 1
cat("<div style='flex: 1; padding-right: 10px;'>")
kable(table1, caption = "Top Employment Areas (1-5)", align = "l") %>% print()
cat("</div>")
# Table 2
cat("<div style='flex: 1; padding-left: 10px;'>")
kable(table2, caption = "Top Employment Areas (6-10)", align = "l") %>% print()
cat("</div>")
cat("</div>")
install.packages("gridExtra")
library(gridExtra)
table1 <- combined_data %>%
count(employment_area) %>%
arrange(desc(n)) %>%
head(5)
table2 <- combined_data %>%
count(employment_area) %>%
arrange(desc(n)) %>%
slice(6:10)
# Create tables using kable
table1_kable <- table1 %>% kable(caption = "Top Employment Areas (1-5)")
table2_kable <- table2 %>% kable(caption = "Top Employment Areas (6-10)")
# Display side-by-side
grid.arrange(tableGrob(table1_kable), tableGrob(table2_kable), ncol = 2)
summary_table <- combined_data %>%
group_by(employment_area) %>%
summarise(
Count = n()  # Count number of learners per employment area
) %>%
arrange(desc(Count)) %>%  # Sort by count in descending order
bind_rows(
tibble(
employment_area = "Total",
Count = nrow(combined_data)  # Total number of learners
),
tibble(
employment_area = "Missing",
Count = sum(is.na(combined_data$employment_area))  # Number of missing values
)
)
kable(summary_table, caption = "Summary of Learners per Employment Area")
summary_data <- combined_data %>%
count(employment_area) %>%  # Count the learners per employment area
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
summary_data <- summary_data %>%
mutate(Percentage = Count / sum(Count) * 100)  # Calculate percentage for labels
ggplot(summary_data, aes(x = "", y = Count, fill = employment_area)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
geom_text(aes(label = paste0(round(Percentage, 1), "%")), position = position_stack(vjust = 0.5)) +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
summary_data <- combined_data %>%
count(employment_area) %>%  # Count the learners per employment area
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
max_value <- summary_data$Count == max(summary_data$Count)
ggplot(summary_data, aes(x = "", y = Count, fill = employment_area)) +
geom_bar(stat = "identity", width = 1, color = ifelse(max_value, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
library(RColorBrewer)
summary_data <- combined_data %>%
count(employment_area) %>%  # Count the learners per employment area
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Calculate percentages
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline
max_value <- summary_data$Count == max(summary_data$Count)
# Use an accessible color palette (Color Universal Design 2)
colors <- brewer.pal(length(unique(summary_data$employment_area)), "Set2")
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = employment_area)) +
geom_bar(stat = "identity", width = 1, color = ifelse(max_value, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(max_value, paste0(round(percentage), "%"), "")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +  # Display percentage only for max slice
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = colors) +  # Apply the color palette
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
install.packages("RColorBrewer")
library(RColorBrewer)
summary_data <- combined_data %>%
count(employment_area) %>%  # Count the learners per employment area
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Calculate percentages
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline
max_value <- summary_data$Count == max(summary_data$Count)
# Use an accessible color palette (Color Universal Design 2)
colors <- brewer.pal(length(unique(summary_data$employment_area)), "Set2")
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = employment_area)) +
geom_bar(stat = "identity", width = 1, color = ifelse(max_value, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(max_value, paste0(round(percentage), "%"), "")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +  # Display percentage only for max slice
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = colors) +  # Apply the color palette
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
summary_data <- combined_data %>%
count(employment_area) %>%  # Count the learners per employment area
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Calculate percentages
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline
max_value <- summary_data$Count == max(summary_data$Count)
# Use an accessible color palette (Color Universal Design 2)
colors <- brewer.pal(length(unique(summary_data$employment_area)), "Set2")
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = employment_area)) +
geom_bar(stat = "identity", width = 1, color = ifelse(max_value, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(max_value, paste0(round(percentage), "%"), "")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +  # Display percentage only for max slice
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = colors) +  # Apply the color palette
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
summary_data <- combined_data %>%
count(employment_area) %>%
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Calculate percentages
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline
max_value <- summary_data$Count == max(summary_data$Count)
# Use a larger color palette (Paired palette with 12 colors)
colors <- brewer.pal(12, "Paired")
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = employment_area)) +
geom_bar(stat = "identity", width = 1, color = ifelse(max_value, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(max_value, paste0(round(percentage), "%"), "")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +  # Display percentage only for max slice
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = colors) +  # Apply the color palette
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
colors <- colorRampPalette(brewer.pal(9, "Set1"))(22)
# Prepare the data for the pie chart
summary_data <- combined_data %>%
count(employment_area) %>%
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Calculate percentages
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline
max_value <- summary_data$Count == max(summary_data$Count)
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = employment_area)) +
geom_bar(stat = "identity", width = 1, color = ifelse(max_value, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(max_value, paste0(round(percentage), "%"), "")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +  # Display percentage only for max slice
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = colors) +  # Apply the custom color palette
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
colors <- colorRampPalette(brewer.pal(9, "Set1"))(22)
# Prepare the data for the pie chart
summary_data <- combined_data %>%
count(employment_area) %>%
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Calculate percentages
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline
max_value <- summary_data$Count == max(summary_data$Count)
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = employment_area)) +
geom_bar(stat = "identity", width = 1, color = ifelse(max_value, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(1:nrow(summary_data) == max_value_row,
paste0(round(percentage), "%\n", Count),
"")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +  # Display percentage and value for max slice
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = colors) +  # Apply the custom color palette
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
colors <- colorRampPalette(brewer.pal(9, "Set1"))(22)
# Prepare the data for the pie chart
summary_data <- combined_data %>%
count(employment_area) %>%
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Calculate percentages
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline
max_value_row <- which.max(summary_data$Count)
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = employment_area)) +
geom_bar(stat = "identity", width = 1, color = ifelse(1:nrow(summary_data) == max_value_row, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(1:nrow(summary_data) == max_value_row,
paste0(round(percentage), "%\n", Count),
"")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +  # Display percentage and value for max slice
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = colors) +  # Apply the custom color palette
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5, label.position = "right"))
summary_data <- combined_data %>%
count(employment_area) %>%
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Assign custom labels for the segments
summary_data$label <- ifelse(summary_data$employment_area == "it_and_information_services", "IT",
ifelse(summary_data$employment_area == "Missing", "Missing Data", summary_data$employment_area))
# Calculate percentages
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline (which corresponds to "IT" or "Missing Data")
max_value_row <- which.max(summary_data$Count)
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = label)) +
geom_bar(stat = "identity", width = 1, color = ifelse(1:nrow(summary_data) == max_value_row, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(1:nrow(summary_data) == max_value_row,
paste0(label, "\n", round(percentage), "%"),
"")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +  # Display label and percentage for max slice
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = c("IT" = "blue", "Missing Data" = "red", "Other" = "grey")) +  # Color for IT, Missing Data, and others
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5, label.position = "right"))
summary_data <- combined_data %>%
count(employment_area) %>%
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Assign custom labels for the segments
summary_data$label <- ifelse(summary_data$employment_area == "it_and_information_services", "IT",
ifelse(summary_data$employment_area == "Missing", "Missing Data", summary_data$employment_area))
# Calculate percentages
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline (which corresponds to "IT" or "Missing Data")
max_value_row <- which.max(summary_data$Count)
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = label)) +
geom_bar(stat = "identity", width = 1, color = ifelse(1:nrow(summary_data) == max_value_row, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(1:nrow(summary_data) == max_value_row,
paste0(label, "\n", round(percentage), "%"),
"")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +  # Display label and percentage for max slice
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5, label.position = "right"))
colors <- colorRampPalette(brewer.pal(9, "Set1"))(22)
summary_data <- combined_data %>%
count(employment_area) %>%
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Assign custom labels for the segments
summary_data$label <- ifelse(summary_data$employment_area == "it_and_information_services", "IT",
ifelse(summary_data$employment_area == "Missing", "Missing Data", summary_data$employment_area))
# Calculate percentages
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline (which corresponds to "IT" or "Missing Data")
max_value_row <- which.max(summary_data$Count)
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = label)) +
geom_bar(stat = "identity", width = 1, color = ifelse(1:nrow(summary_data) == max_value_row, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(1:nrow(summary_data) == max_value_row,
paste0(label, "\n", round(percentage), "%"),
"")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +  # Display label and percentage for max slice
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = colors) +  # Apply the custom color palette
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5, label.position = "right"))
colors <- colorRampPalette(brewer.pal(9, "Set1"))(22)
summary_data <- combined_data %>%
count(employment_area) %>%
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Assign custom labels for the segments
summary_data$label <- ifelse(summary_data$employment_area == "it_and_information_services", "IT",
ifelse(summary_data$employment_area == "Missing", "Missing Data", summary_data$employment_area))
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline (which corresponds to "IT" or "Missing Data")
max_value_row <- which.max(summary_data$Count)
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = label)) +
geom_bar(stat = "identity", width = 1, color = ifelse(1:nrow(summary_data) == max_value_row, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(1:nrow(summary_data) == max_value_row,
paste0(label, "\n", round(percentage), "%"),
"")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = colors) +  # Apply the custom color palette
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5, label.position = "right"))
colors <- colorRampPalette(brewer.pal(9, "Set1"))(22)
summary_data <- combined_data %>%
count(employment_area) %>%
rename(Count = n) %>%
add_row(employment_area = "Missing", Count = sum(is.na(combined_data$employment_area))) %>%
add_row(employment_area = "Total", Count = nrow(combined_data)) %>%
filter(employment_area != "Total")  # Exclude the total row for pie chart clarity
# Assign custom labels for the segments
summary_data$label <- ifelse(summary_data$employment_area == "it_and_information_services", "IT",
ifelse(summary_data$employment_area == "Missing", "Missing Data", summary_data$employment_area))
summary_data <- summary_data %>%
mutate(percentage = Count / sum(Count) * 100)
# Determine the maximum count value for outline (which corresponds to "IT" or "Missing Data")
max_value_row <- which.max(summary_data$Count)
# Plot the pie chart
ggplot(summary_data, aes(x = "", y = Count, fill = label)) +
geom_bar(stat = "identity", width = 1, color = ifelse(1:nrow(summary_data) == max_value_row, "black", NA), size = 1.2) +  # Add outline for max value
coord_polar(theta = "y") +
geom_text(aes(label = ifelse(1:nrow(summary_data) == max_value_row,
paste0(label, "\n", round(percentage), "%"),
"")),
position = position_stack(vjust = 0.5), size = 5, color = "white") +
theme_minimal() +
labs(title = "Learners per Employment Area (with Missing Data)", fill = "Employment Area") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_fill_manual(values = colors) +  # Apply the custom color palette
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5, label.position = "right"))
